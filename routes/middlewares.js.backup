const jwt = require('jsonwebtoken');
//const RateLimit = require('express-rate-limit');

// exports.isLoggedIn = (req, res, next) => {
//     if (req.isAuthenticated()) {
//       next();
//     } else {
//         res.status(403).json({
//             code: 403,
//             message: '로그인 필요'
//         });
//     }
// };

// exports.isNotLoggedIn = (req, res, next) => {
//     if (!req.isAuthenticated()) {
//       next();
//     } else {
//         res.status(403).json({
//             code: 403,
//             message: '로그아웃 필요'
//         });
//     }
// };

exports.createToken = payload =>{
    const jwtOption = { expiresIn : '10d', issuer: 'picknroll' };
    return new Promise((resolve, reject)=>{
        jwt.sign(payload, process.env.JWT_SECRET, jwtOption, (error, token)=>{
            if(error) reject(error);
            resolve(token);
        });
    });
};

exports.verifyToken = token => {
    return new Promise((resolve, reject) =>{
        jwt.verify(token, process.env.JWT_SECRET, (error, decoded)=>{
            if(error) reject(error);
            resolve(decoded);
        });
    });
}

// exports.verifyToken = (req, res, next) => {
//     try {
//       req.decoded = jwt.verify(req.headers.authorization, process.env.JWT_SECRET);
//       return next();
//     } catch (error) {
//       if (error.name === 'TokenExpiredError') { // 유효기간 초과
//         return res.status(419).json({
//           code: 419,
//           message: '토큰이 만료되었습니다',
//         });
//       }
//         return res.status(401).json({
//             code: 401,
//             message: '유효하지 않은 토큰입니다',
//         });
//     }
// };

// exports.apiLimiter = new RateLimit({
//     windowMs: 60 * 1000, // 1분
//     max: 1,
//     delayMs: 0,
//     handler(req, res) {
//       res.status(this.statusCode).json({
//         code: this.statusCode, // 기본값 429
//         message: '1분에 한 번만 요청할 수 있습니다.',
//       });
//     },
// });

// exports.deprecated = (req, res) => {
//     res.status(410).json({
//       code: 410,
//       message: '새로운 버전이 나왔습니다. 새로운 버전을 사용하세요.',
//     });
// };